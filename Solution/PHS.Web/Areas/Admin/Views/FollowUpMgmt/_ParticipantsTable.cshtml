@model IEnumerable<PHS.DB.FollowUpGroup> 

@using PHS.Business.Extensions
@using PHS.Common

<style>
    .Column {
      float: left;
    }
    label.Column {
        width: 80px;
    }
    input[type="submit"] {
        width: 50px;
    }
    input[type="file"] {
        width: calc(100% - (80px + 50px));
    }
</style>


<script type="text/javascript">

    $(document).ready(function () {
        $(".btn-print").click(function () {

            var followgroupid = $(this).attr("value");

            var healthReportType = document.getElementById(followgroupid + '_healthReportType').value;

            var jsonObject = {
                "followgroupid": followgroupid,
                "healthReportType": healthReportType
            };

            $.ajax({
                url: "@Url.Action("PrintHealthReportByFollowUpGroup", "FollowUpMgmt")",
                type: "POST",
                data: JSON.stringify(jsonObject),
                cache: false,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                error: function (response) {
                    alert(response.Error);
                },
                success: function (response) {

                    window.location = '@Url.Action("DownloadZip", "FollowUpMgmt")?fileGuid=' + response.FileGuid
                                      + '&filename=' + response.FileName;
                }
            });

        });
    });

</script>

@if (Model != null && Model.Count() > 0)
{
    foreach (var fugroup in Model)
    {
            <div style="float:right;">
                <!--
                <button class="btn btn-primary" type="button" id="attach" value="@fugroup.FollowUpGroupID">Attach File</button>
                    -->
                <button class="btn btn-primary btn-print" type="button" id="btnPrint" value="@fugroup.FollowUpGroupID">Print</button>

                @{

                    var internallistItems1 = new List<SelectListItem>()
                        {
                            new SelectListItem {Text = "Normal", Value = Constants.Followup_Print_HealthReport_Normal},
                            new SelectListItem {Text = "Abnormal", Value = Constants.Followup_Print_HealthReport_Abnormal},
                            new SelectListItem {Text = "Abnormal Non Eligible", Value = Constants.Followup_Print_HealthReport_AbnormalNonEligible}
                        };

                    @Html.DropDownList(fugroup.FollowUpGroupID+"_healthReportType", internallistItems1, string.Empty,
                                        new Dictionary<string, object>
                                        {
                                            { "data-field-property", fugroup.FollowUpGroupID+"healthReportType"},
                                            { "class","is-publisher"},
                                            { "id", fugroup.FollowUpGroupID+"_healthReportType"}

                                         })
                }

                <br/>

                <input class="Column" id="file-input-@fugroup.FollowUpGroupID" type="file" name="files" @*accept=".xls"*@ />
                <button class="Column btn btn-primary btn-importcaller" type="button" id="importcaller" value="@fugroup.FollowUpGroupID">Import Caller</button>
                
            </div>
    <div class="table-responsive">
        <table class="table table-striped">
            <caption> @fugroup.Title </caption>
            @if (fugroup.ParticipantCallerMappings != null && fugroup.ParticipantCallerMappings.Count > 0)
            {
            <thead>
                <tr>
                    <th>
                        @Html.DisplayName("NRIC")
                    </th>
                    <th>
                        @Html.DisplayName("Salutation")
                    </th>
                    <th>
                        @Html.DisplayName("FullName")
                    </th>
                    <th>
                        @Html.DisplayName("Language")
                    </th>
                    <th>
                        @Html.DisplayName("Contact")
                    </th>
                    <th>
                        @Html.DisplayName("PhaseI Follow-up Volunteer")
                    </th>
                    <th>
                        @Html.DisplayName("PhaseII Follow-up Volunteer")
                    </th>
                    <th>
                        @Html.DisplayName("PhaseI Committee Member")
                    </th>
                    <th>
                        @Html.DisplayName("PhaseII Committee Member")
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in fugroup.ParticipantCallerMappings)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Participant.Nric)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Participant.Salutation)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Participant.FullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Participant.Language)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Participant.MobileNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PhaseIFollowUpVolunteer)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PhaseIIFollowUpVolunteer)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PhaseICommitteeMember)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PhaseIICommitteeMember)
                        </td>
                        <td>
                            @Html.ActionLink(
                               "View",
                               "ViewParticipantJourney",
                               "ParticipantJourney",
                               new { Area = "" , Nric = item.Participant.Nric, PHSEventId = 3 },
                               htmlAttributes: new { target = "_blank" })
                        </td>
                    </tr>
                }
            </tbody>
            }
        </table>
    </div>
    }
}
else
{
    <div>No Followup groups found!!</div>
}

<script>
    $(".btn-importcaller").click(function () {
        // Checking whether FormData is available in browser
        if (window.FormData !== undefined) {

            var followgroupid = $(this).attr("value");

            var fileUpload = $("#file-input-" + followgroupid).get(0);

            var files = fileUpload.files;

            // Create FormData object
            var fileData = new FormData();

            // Looping over all files and add it to FormData object
            for (var i = 0; i < files.length; i++) {
                fileData.append(files[i].name, files[i]);
            }

            // Adding one more key to FormData object
            fileData.append('followgroupid', '1');

            $.ajax({
                url: '@Url.Action("ImportCaller")',
                type: "POST",
                contentType: false, // Not to set any content header
                processData: false, // Not to process data
                data: fileData,
                success: function (result) {
                    alert("Import caller success");
                },
                error: function (err) {
                    alert(err.statusText);
                }
            });

        } else {
            alert("FormData is not supported.");
        }

    });
</script>
