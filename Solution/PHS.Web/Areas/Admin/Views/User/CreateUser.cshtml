@model PHS.DB.Person

@{
    ViewBag.Title = "CreateUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create User</h2>

@using (Html.BeginForm("createuserform"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />

        <div style="color: red">@ViewBag.error</div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="radio-inline">
                    @Html.RadioButtonFor(model => model.Role, "V", new { @checked = "checked" }) Volunteer
                </div>
                <div class="radio-inline">
                    @Html.RadioButtonFor(model => model.Role, "D") Doctor
                </div>
                <div class="radio-inline">
                    @Html.RadioButtonFor(model => model.Role, "A") Admin
                </div>
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsActive, new { @class = "activecheckbox" })
                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EffectiveStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EffectiveStartDate, new { @class = "form-control datepickerstart" })
                @Html.ValidationMessageFor(model => model.EffectiveStartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EffectiveEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EffectiveEndDate, new { @class = "form-control datepickerend" })
                @Html.ValidationMessageFor(model => model.EffectiveEndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="BtnCreateUser" value="Save" class="button-common" 
                       formaction="CreateUser" formmethod="post" />
                <input type="submit" name="BtnCancel" value="Back" class="button-common cancel"
                       formaction="Index" formmethod="get" />
            </div>
        </div>
    </div>
}

<script>
    $(function () {
        $('.datepickerstart').datepicker(
            {
                minDate: 0,
                dateFormat: 'yy-mm-dd'
            }).datepicker("setDate", "0");
        $('.datepickerend').datepicker(
            {
                minDate: 0,
                dateFormat: 'yy-mm-dd'
            }).datepicker("setDate", "2099/12/31");
        $('.activecheckbox').change(function () {
            if($('.activecheckbox').prop('checked') == true) {
            $(".datepickerstart").prop('disabled', false);
            $(".datepickerend").prop('disabled', false);
            }
            else {
                $(".datepickerstart").prop('disabled', true);
                $(".datepickerend").prop('disabled', true);
            }
        });
        $('.activecheckbox').prop('checked', true);
        $('.activecheckbox').trigger('change');
    });
</script>

