@model List<PHS.Business.ViewModel.ParticipantJourney.ParticipantJourneyModalityCircleViewModel>

@using PHS.Common
@using PHS.Business.Extensions
@using PHS.Business.ViewModel.ParticipantJourney

@{
    ViewBag.Title = "Mega Sorting Station";
}


<script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"> </script>
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />

<script>
    $(document).ready(function () {
        $(".cbk").change(function () {
            var select = "";
            $("input[type = 'checkbox']").each(function () {
                var c = $(this).is(":checked");
                if (c) {
                    select = select + "1|";

                } else {
                    select = select + "0|";
                }
            })

            $.ajax(
                {
                    type: "GET",
                    url: '@Url.Action("ActivateCirclesFromMSSS", "ParticipantJourney")', // Controller/View
                    data: {'activateList': select},
                    contentType: "application/json; charset=utf-8",
                    success: function (resp) {
                        window.parent.$('#ptJourney').html(resp);
                        //$('#ptJourney').html(resp);
                    }
                });

        });
    });

    $(document).ready(function () {
        $(".labelNo").each(function () {
            $(this).keyup(function () {
                calculateSum();
            });
        });

        $(".labelNo").each(function () {
            $(this).click(function () {
                calculateSum();
            });
        });

        $(".labelNo").each(function () {
            $(this).ready(function () {
                calculateSum();
            });
        });

        $("input[type = 'checkbox']").each(function () {
            $(this).click(function () {
                calculateSum();
            });
        });

    });

    function calculateSum() {

        var sum = 0;
        //iterate through each textboxes and add the values

        $("input[type = 'checkbox']").each(function () {
            var c = $(this).is(":checked");
            if (c) {
                $(this).parent().parent().find(".labelNo").each(function () {
                    //add only if the value is number
                    if (!isNaN(this.value) && this.value.length != 0) {
                        sum += parseFloat(this.value);
                        
                    }
                }).removeAttr("disabled");
    
            }

  
            
        });


        $("#sum").html(sum.toFixed(0));
    }

    function printLabels() {
        alert("Please print " + document.getElementById("sum").innerText + " Labels");

        $.ajax({
            url: "@Url.Action("GenerateLabel", "FormAccess")",
            type: "POST",
            cache: false,
            contentType: "application/json; charset=utf-8",
            error: function (response) {
                alert("Unable to print label");
            },
            success: function (response) {
                window.location = '@Url.Action("DownloadLabel", "FormAccess")?fileGuid=' + response.FileGuid
                                       + '&filename=' + response.FileName;
            }
        });
    }

</script>



@using (Html.BeginForm())
{
    <h2>Form A - Mega Sorting Station</h2>

    <div>

        <table id="tableFormA" class="table">
            <tr>
                <td></td>
                <td width="50%" >
                    <b>Eligibility</b>
                </td>
                <td>
                    <b>Interest</b>
                </td>
                <td>
                    <b>No. of Labels</b>
                </td>
            </tr>

            @{
                var mode = (Constants.TemplateFieldMode) TempData.Peek("ViewParticipantJourneyType");
                var readonlyAttribute = mode.IsReadOnlyMode() ? "readonly" : "";
                var disabledAttribute = mode.IsReadOnlyMode() ? "disabled" : "";
            }


            @for (int i = 0; i < Model.Count; i++)
            {
                <tr>
                    <td style="text-align:center">
                        <b align="center">@Model.ElementAt(i).Name</b>
                        <br />
                        <img src="@Model.ElementAt(i).IconPath" height="40" width="40" />
                    </td>
                    <td style="white-space: pre; " > @Html.Raw(@Model.ElementAt(i).Eligiblity)</td>
                    <td>
                        @if (Model.ElementAt(i).IsMandatory == true)
                        {
                            @Html.CheckBoxFor(m => m.ElementAt(i).IsActive, new { @class = "cbk", modIsActive = Model.ElementAt(i).Name, @disabled = "disabled" });
                        }

                        else if (mode.IsReadOnlyMode())
                        {
                            @Html.CheckBoxFor(m => m.ElementAt(i).IsActive, new { @class = "cbk", modIsActive = Model.ElementAt(i).Name, @disabled = "disabled" });
                        }

                        else
                        {
                            @Html.CheckBoxFor(m => m.ElementAt(i).IsActive, new { @class = "cbk", modIsActive = Model.ElementAt(i).Name });
                        }
                    </td>
                    <td>

                        @if (!Model.ElementAt(i).IsActive)
                        {
                           @Html.TextBoxFor(m => m.ElementAt(i).Labels, new { @class = "labelNo", @type = "number", @disabled = "disabled" })
                        }

                        else
                        {
                            @Html.TextBoxFor(m => m.ElementAt(i).Labels, new { @class = "labelNo", @type = "number" })

                        }
                        
                    </td>
                </tr>

            }
        </table>

    </div>

    <br />
    <div id="summation">
        <b>&nbsp;</b>
        <b align="right">Number of Labels to be Printed:</b>
        <b align="center"><span id="sum">0</span></b>
    </div>
    <input type="button" value="Print Labels" @disabledAttribute onclick="printLabels()" />
}

