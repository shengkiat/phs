@model PHS.FormBuilder.ViewModels.CriteriaFieldViewModel
@using PHS.FormBuilder.Helpers
@using PHS.Common
@using PHS.FormBuilder.Extensions
@using PHS.FormBuilder.ViewModels

@using (Html.BeginCollectionItem("CriteriaFields"))
{
    <div id="trCriteriaRow0" class="trCriteriaRow0">

        @{
            <div style="float:left;">
                @Html.DropDownListFor(m => m.FieldLabel, Model.FieldLabels, String.Empty, new { @onchange = "myFunction(this)" })
            </div>

            var criteriaLogFields = new List<SelectListItem>()
                        {
                            new SelectListItem {Text = "eq", Value = "eq"},
                            new SelectListItem {Text = "neq", Value = "neq"},
                            new SelectListItem {Text = "gt", Value = "gt"},
                            new SelectListItem {Text = "gte", Value = "gte"},
                            new SelectListItem {Text = "lt", Value = "lt"},
                            new SelectListItem {Text = "lte", Value = "lte"},
                            new SelectListItem {Text = "startswith", Value = "startswith"},
                            new SelectListItem {Text = "endswith", Value = "endswith"},
                            new SelectListItem {Text = "contains", Value = "contains"},
                            new SelectListItem {Text = "doesnotcontain", Value = "doesnotcontain"},
                            new SelectListItem {Text = "in", Value = "in"}
                        };

            <div style="float:left;">
                @Html.DropDownListFor(m => m.CriteriaLogic, criteriaLogFields, String.Empty)
            </div>
            <div id="tdCriteriaFields" style="float:left;">
                @foreach (var field in Model.GroupedEntries.First())
                {
                    if (field.FieldType == Constants.FieldType.CHECKBOX
                        || field.FieldType == Constants.FieldType.RADIOBUTTON
                        || field.FieldType == Constants.FieldType.DROPDOWNLIST)
                    {
                        <select id="criteria[@field.FieldLabel]" name="select[@field.FieldLabel]" style="display:none;">
                            @foreach (var formField in Model.Fields)
                            {
                                if (formField.Label.Equals(field.FieldLabel))
                                {
                                    foreach (var option in formField.Options.Split(","))
                                    {
                                        <option value="@option">@option</option>
                                    }
                                }
                            }
                        </select>
                    }

                    else
                    {
                        @Html.TextBoxFor(model => model.CriteriaValue, new { @id = "criteria[" + @field.FieldLabel + "]", @style = "display:none;" })
                    }
                }
            </div>
        }

        <div style="float:left;">
            <a id="addCriteriaConditionButton" name="addCriteriaConditionButton" class="hyperlink-button light-blue-button">+</a>
            <a id="removeCriteriaButton" name="removeCriteriaButton" class="hyperlink-button light-blue-button">-</a>
        </div>

        <div id="trCriteriaRow1" style="display:none;">

            <br style="clear:both" />

            <div style="float:left;">
                <select id="criteriaCondition" name="criteriaCondition">
                    <option value="empty"></option>
                    <option value="and">and</option>
                    <option value="or">or</option>
                </select>
            </div>
            <div style="float:left;">
                @Html.DropDownListFor(m => m.CriteriaLogic, criteriaLogFields, String.Empty)

            </div>
            <div id="tdCriteriaFields" style="float:left;">

                @foreach (var field in Model.GroupedEntries.First())
                {
                    if (field.FieldType == Constants.FieldType.CHECKBOX
                        || field.FieldType == Constants.FieldType.RADIOBUTTON
                        || field.FieldType == Constants.FieldType.DROPDOWNLIST)
                    {
                        <select id="criteria[@field.FieldLabel]" name="select[@field.FieldLabel]" style="display:none;">
                            @foreach (var formField in Model.Fields)
                            {
                                if (formField.Label.Equals(field.FieldLabel))
                                {
                                    foreach (var option in formField.Options.Split(","))
                                    {
                                        <option value="@option">@option</option>
                                    }
                                }
                            }
                        </select>
                    }

                    else
                    {
                        <input id="criteria[@field.FieldLabel]" name="criteria[@field.FieldLabel]" type="text" style="display:none;" />
                    }
                }

            </div>
            <div style="float:left;">
                <a id="addNextCriteriaConditionButton" name="addNextCriteriaConditionButton" class="hyperlink-button light-blue-button">+</a>
                <a id="removeCriteriaConditionButton" name="removeCriteriaConditionButton" class="hyperlink-button light-blue-button">-</a>
            </div>
        </div>

   </div>
}
