@model IEnumerable<PHS.DB.FollowUpGroup>

<style>
    li {
        list-style-type:none
    }
    .callStatus {
        width:100px;   
    }
</style>

@{
    var phaseIvolunteercallstatuslist = new List<SelectListItem>() {
        new SelectListItem {Text = "Did not pick up on 1st call", Value = "Did not pick up on 1st call"},
        new SelectListItem {Text = "Did not pick up on 2nd call", Value = "Did not pick up on 2nd call"},
        new SelectListItem {Text = "Did not pick up on 3rd call", Value = "Did not pick up on 3rd call"},
        new SelectListItem {Text = "Invalid/wrong number", Value = "Invalid/wrong number"},
        new SelectListItem {Text = "Received envelope, not all items present", Value = "Received envelope, not all items present"},
        new SelectListItem {Text = "Hasn't checked mailbox for envelope", Value = "Hasn't checked mailbox for envelopel"},
        new SelectListItem {Text = "Checked mailbox but didn't receive envelope", Value = "Checked mailbox but didn't receive envelope"},
        new SelectListItem {Text = "Telehealth completed", Value = "Telehealth completed"},
        new SelectListItem {Text = "Telehealth Phase I completed, ready for Phase II.", Value = "Telehealth Phase I completed, ready for Phase II."},
        new SelectListItem {Text = "Telehealth completed, ready for Phase II. *To resend documents to correct GP clinic", Value = "Telehealth completed, ready for Phase II. *To resend documents to correct GP clinic"},
        };

    var phaseIIvolunteercallstatuslist = new List<SelectListItem>() {
        new SelectListItem {Text = "Did not pick up on 1st call (Phase II)", Value = "Did not pick up on 1st call (Phase II)"},
        new SelectListItem {Text = "Did not pick up on 2nd call (Phase II)", Value = "Did not pick up on 2nd call (Phase II)"},
        new SelectListItem {Text = "Did not pick up on 3rd call (Phase II)", Value = "Did not pick up on 3rd call (Phase II)"},
        new SelectListItem {Text = "Telehealth Phase II completed", Value = "Telehealth Phase II complete"},
        new SelectListItem {Text = "Telehealth Phase II completed, home address changed", Value = "Telehealth Phase II completed, home address changed"},
        };

    var phaseIcommmembercallstatuslist = new List<SelectListItem>() {
        new SelectListItem {Text = "Noted!Please call this participant again soon.", Value = "Noted!Please call this participant again soon." },
        new SelectListItem {Text = "Noted!We will troubleshoot and mail to the correct address.", Value = "Noted!We will troubleshoot and mail to the correct address." },
        new SelectListItem {Text = "Noted!Thank you so much!", Value = "Noted!Thank you so much!" },
        new SelectListItem {Text = "Noted!We will troubleshoot and mail to the correct GP clinic.", Value = "Noted!We will troubleshoot and mail to the correct GP clinic." }
    };


    var phaseIIcommmembercallstatuslist = new List<SelectListItem>() {
        new SelectListItem {Text = "Noted!Please call a 2nd time on a separate occasion.", Value = "Noted!Please call a 2nd time on a separate occasion." },
        new SelectListItem {Text = "Noted!Please call a 3rd time on a separate occasion.", Value = "Noted!Please call a 3rd time on a separate occasion." },
        new SelectListItem {Text = "Noted!We will troubleshoot.", Value = "Noted!We will troubleshoot." },
        new SelectListItem {Text = "Noted!Thank you so much!", Value = "Noted!Thank you so much!" },
        new SelectListItem {Text = "Noted!We will take down his new address.Thank you so much!", Value = "Noted!We will take down his new address.Thank you so much!" }
    };
}
    @if (Model != null && Model.Count() > 0)
    {
        <div style="overflow-x:auto;">
        @foreach (var fugroup in Model)
        {
            <div class="table-responsive">
                <table class="table table-striped">
                    <caption> @fugroup.Title </caption>
                    @if (fugroup.ParticipantCallerMappings != null && fugroup.ParticipantCallerMappings.Count > 0)
                    {
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayName("NRIC")
                                </th>
                                <th>
                                    @Html.DisplayName("Salutation")
                                </th>
                                <th>
                                    @Html.DisplayName("FullName")
                                </th>
                                <th>
                                    @Html.DisplayName("Language")
                                </th>
                                <th>
                                    @Html.DisplayName("Contact")
                                </th>
                                <th style="width:300px">
                                    @Html.DisplayName("Phase I")
                                </th>
                                <th style="width:300px">
                                    @Html.DisplayName("Phase II")
                                </th>
                                <th style="width:120px"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in fugroup.ParticipantCallerMappings)
                            {
                                

                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Participant.Nric)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Participant.Salutation)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Participant.FullName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Participant.Language)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Participant.MobileNumber)
                                    </td>
                                    <td>
                                        <li>
                                            @Html.DisplayName("Follow-up Volunteer:")
                                            @Html.DisplayFor(modelItem => item.PhaseIFollowUpVolunteer)
                                        </li>
                                        
                                        <li>
                                            @Html.DisplayName("Call Status:")
                                            @Html.DropDownList("callstatusphaseOnevolunteer", phaseIvolunteercallstatuslist, "--Select--", new { @class = "callStatus" })
                                        </li>

                                        <li>
                                            @Html.DisplayName("Date:")
                                            <input type="text" class="datepicker" name="phaseIVolunteerCallTimestamp" />
                                        </li>

                                        <li>
                                            @Html.DisplayName("Remark:")
                                            <input type="text" name="phaseIVolunteerCallRemark" />
                                        </li>

                                        <br/>


                                        <li>
                                            @Html.DisplayName("Committee Member:")
                                            @Html.DisplayFor(modelItem => item.PhaseICommitteeMember)
                                        </li>

                                        <li>
                                            @Html.DisplayName("Call Status:")
                                            @Html.DropDownList("callstatusphaseOneCommMember", phaseIcommmembercallstatuslist, "--Select--", new { @class = "callStatus" })
                                        </li>

                                        <li>
                                            @Html.DisplayName("Date:")
                                            <input type="text" name="phaseIVolunteerCallRemark" />
                                        </li>

                                        <li>
                                            @Html.DisplayName("Remark:")
                                            <input type="text" name="phaseIVolunteerCallRemark" />
                                        </li>

                                    </td>
                                    
                                    <td>
                                        <li>
                                            @Html.DisplayName("Follow-up Volunteer:")
                                            @Html.DisplayFor(modelItem => item.PhaseIIFollowUpVolunteer)
                                        </li>

                                        <li>
                                            @Html.DisplayName("Call Status:")
                                            @Html.DropDownList("callstatusphasetwovolunteer", phaseIIvolunteercallstatuslist, "--Select--", new { @class = "callStatus" })
                                        </li>

                                        <li>
                                            @Html.DisplayName("Date:")
                                            <input type="text" class="datepicker" name="phaseIIVolunteerCallTimestamp" />
                                        </li>

                                        <li>
                                            @Html.DisplayName("Remark:")
                                            <input type="text" name="phaseIIVolunteerCallRemark" />
                                        </li>

                                        <br />

                                        <li>
                                            @Html.DisplayName("Committee Member:")
                                            @Html.DisplayFor(modelItem => item.PhaseIICommitteeMember)
                                        </li>

                                        <li>
                                            @Html.DisplayName("Call Status:")
                                            @Html.DropDownList("callstatusphaseTwoCommMember", phaseIIcommmembercallstatuslist, "--Select--", new { @class = "callStatus" })
                                        </li>

                                        <li>
                                            @Html.DisplayName("Date:")
                                            <input type="text" class="datepicker" name="phaseIICommmemberCallTimestamp" />
                                        </li>

                                        <li>
                                            @Html.DisplayName("Remark:")
                                            <input type="text" name="phaseIICommmemberCallRemark" />
                                        </li>
                                    </td>
                                    
                                    <td>

                                        <button class="btn btn-primary btn-save" type="button" id="saveparticipantcaller" value="@item.ParticipantCallerMappingID">Save</button>

                                        @Html.ActionLink(
                                           "View",
                                           "ViewParticipantJourney",
                                           "ParticipantJourney",
                                           new { Area = "", Nric = item.Participant.Nric, PHSEventId = 3 },
                                           htmlAttributes: new { target = "_blank" })
                                    </td>
                                </tr>
                            }
                        </tbody>
                    }
                </table>
            </div>
        }
        </div>
    }
    else
    {
        <div>No Followup groups found!!</div>
    }
    <script>
        $(document).ready(function () {
            $(".btn-save").click(function () {

                var participantCallerMappingId = $(this).attr("value");

                //var healthReportType = document.getElementById(followgroupid + '_healthReportType').value;

                var jsonObject = {
                    "participantCallerMappingId": participantCallerMappingId
                };

                $.ajax({
                    url: "@Url.Action("SaveParticipantCallerMapping", "FollowUp")",
                    type: "POST",
                    data: JSON.stringify(jsonObject),
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    error: function (response) {
                        alert(response.Error);
                    },
                    success: function (response) {
                        alert("Save successfully");
                    }
                });

            });
        });
    </script>

