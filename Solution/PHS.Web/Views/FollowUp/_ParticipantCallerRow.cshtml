@model PHS.DB.ParticipantCallerMapping

<style>
    li {
        list-style-type: none;
    }

    .callStatus {
        width: 100px;
    }

    .callDateTime {
        width: 150px;
    }
</style>

@{
    var phaseIvolunteercallstatuslist = new List<SelectListItem>() {
        new SelectListItem {Text = "Did not pick up on 1st call", Value = "Did not pick up on 1st call"},
        new SelectListItem {Text = "Did not pick up on 2nd call", Value = "Did not pick up on 2nd call"},
        new SelectListItem {Text = "Did not pick up on 3rd call", Value = "Did not pick up on 3rd call"},
        new SelectListItem {Text = "Invalid/wrong number", Value = "Invalid/wrong number"},
        new SelectListItem {Text = "Not all items present", Value = "Not all items present"},
        new SelectListItem {Text = "Hasn't checked mailbox", Value = "Hasn't checked mailbox"},
        new SelectListItem {Text = "Checked mailbox but didn't receive", Value = "Checked mailbox but didn't receive"},
        new SelectListItem {Text = "Phase I done, no phase II", Value = "Phase I done, no phase II"},
        new SelectListItem {Text = "Phase II next", Value = "Phase II next"},
        new SelectListItem {Text = "Wrong GP, Phase II next", Value = "Wrong GP, Phase II next"},
        };

    var phaseIIvolunteercallstatuslist = new List<SelectListItem>() {
        new SelectListItem {Text = "Did not pick up on 1st call", Value = "Did not pick up on 1st call"},
        new SelectListItem {Text = "Did not pick up on 2nd call", Value = "Did not pick up on 2nd call"},
        new SelectListItem {Text = "Did not pick up on 3rd call", Value = "Did not pick up on 3rd call"},
        new SelectListItem {Text = "Phase II done", Value = "Phase II done"},
        new SelectListItem {Text = "Address changed, Phase II done", Value = "Address changed, Phase II done"},
        };

    var phaseIcommmembercallstatuslist = new List<SelectListItem>() {
        new SelectListItem {Text = "Please call a 2nd time.", Value = "Please call a 2nd time." },
        new SelectListItem {Text = "Please call a 3rd time.", Value = "Please call a 3rd time." },
        new SelectListItem {Text = "Will troubleshoot.", Value = "Will troubleshoot." },
        new SelectListItem {Text = "Please call again soon.", Value = "Please call again soon." },
        new SelectListItem {Text = "Noted!", Value = "Noted!" },
        new SelectListItem {Text = "Troubleshooted.", Value = "Troubleshooted." }
    };


    var phaseIIcommmembercallstatuslist = new List<SelectListItem>() {
        new SelectListItem {Text = "Please call a 2nd time.", Value = "Please call a 2nd time." },
        new SelectListItem {Text = "Please call a 3rd time.", Value = "Please call a 3rd time." },
        new SelectListItem {Text = "Will troubleshoot.", Value = "Will troubleshoot." },
        new SelectListItem {Text = "Noted change in address!", Value = "Noted change in address!" },
        new SelectListItem {Text = "Noted!", Value = "Noted!" },
        new SelectListItem {Text = "Troubleshooted.", Value = "Troubleshooted." }
    };
}

<script type="text/javascript">

function checkKey() {
    var plaintext = document.getElementById("liColourRow");
    if (plaintext.value == 'test') {
        plaintext.style.backgroundColor = "#FF0000";
    }
    else {
        plaintext.style.backgroundColor = "#66CD00";
    }
}

</script>

@{ 
    var htmlStyle = "color:black;";
    if (!string.IsNullOrEmpty(Model.PhaseIFollowUpVolunteerCallStatus)
        && Model.PhaseIFollowUpVolunteerCallStatus.Equals("Phase I done, no phase II"))
    {
        htmlStyle = "color:red;";
    }
}

<tr>
    <td>
        <li style=@htmlStyle>
            <b>@Html.DisplayFor(modelItem => modelItem.Participant.Nric)</b>
            
        </li >

        <li style=@htmlStyle>
            <b>Name: </b>
            @Html.DisplayFor(modelItem => modelItem.Participant.FullName)
        </li>

        <li>
            <b>Language: </b>
            @Html.DisplayFor(modelItem => modelItem.Participant.Language)
        </li>

        <li>
            <b>Mobile Number: </b>
            @Html.DisplayFor(modelItem => modelItem.Participant.MobileNumber)
        </li>
        <li>
            <b>Home Number: </b>
            @Html.DisplayFor(modelItem => modelItem.Participant.HomeNumber)
        </li>
    </td>
    <td>    

        <li>
            <b>@Html.DisplayName("Follow-up Volunteer:")</b>
            @Html.DisplayFor(modelItem => modelItem.PhaseIFollowUpVolunteer)
        </li>

        <li>
            <b>@Html.DisplayName("Call Status:")</b>
            @Html.DropDownListFor(modelItem => modelItem.PhaseIFollowUpVolunteerCallStatus, phaseIvolunteercallstatuslist, "--Select--", new { @id = Model.ParticipantCallerMappingID + "_PhaseIFollowUpVolunteerCallStatus", @class = "callStatus", style = "width: 300px;" })
            
        </li>

        <li>
            <b>@Html.DisplayName("Date:")</b>
            @Html.EditorFor(modelItem => modelItem.PhaseIFollowUpVolunteerCallDateTime, new { htmlAttributes = new { @id = Model.ParticipantCallerMappingID + "_PhaseIFollowUpVolunteerCallDateTime", @class = "callDateTime", Type = "date" } })
        </li>

        <li>
            <b>@Html.DisplayName("Remarks:")</b>
            @Html.EditorFor(modelItem => modelItem.PhaseIFollowUpVolunteerCallRemark, new { htmlAttributes = new { @id = Model.ParticipantCallerMappingID + "_PhaseIFollowUpVolunteerCallRemark", style = "width: 300px;" } })
        </li>




        <br />

        <li>
            <b>@Html.DisplayName("Committee Member:")</b>
            @Html.DisplayFor(modelItem => modelItem.PhaseICommitteeMember)
        </li>

        <li>
            <b>@Html.DisplayName("Call Status:")</b>
            @Html.DropDownListFor(modelItem => modelItem.PhaseICommitteeMemberCallStatus, phaseIcommmembercallstatuslist, "--Select--", new { @id = Model.ParticipantCallerMappingID + "_PhaseICommitteeMemberCallStatus", @class = "callStatus", style = "width: 300px;" })
        </li>

        <li>
            <b>@Html.DisplayName("Date:")</b>
            @Html.EditorFor(modelItem => modelItem.PhaseICommitteeMemberCallDateTime, new { htmlAttributes = new { @id = Model.ParticipantCallerMappingID + "_PhaseICommitteeMemberCallDateTime", @class = "callDateTime", Type = "date" } })
        </li>

        <li>
            <b>@Html.DisplayName("Remarks:")</b>
            @Html.EditorFor(modelItem => modelItem.PhaseICommitteeMemberCallRemark, new { htmlAttributes = new { @id = Model.ParticipantCallerMappingID + "_PhaseICommitteeMemberCallRemark", style = "width: 300px;" } })
        </li>

    </td>

    <td>
        <li>
            <b>@Html.DisplayName("Follow-up Volunteer:")</b>
            @Html.DisplayFor(modelItem => modelItem.PhaseIIFollowUpVolunteer)
        </li>

        <li>
            <b>@Html.DisplayName("Call Status:")</b>
            @Html.DropDownListFor(modelItem => modelItem.PhaseIIFollowUpVolunteerCallStatus, phaseIIvolunteercallstatuslist, "--Select--", new { @id = Model.ParticipantCallerMappingID + "_PhaseIIFollowUpVolunteerCallStatus", @class = "callStatus", style = "width: 300px;" })
        </li>

        <li>
            <b>@Html.DisplayName("Date:")</b>
            @Html.EditorFor(modelItem => modelItem.PhaseIIFollowUpVolunteerCallDateTime, new { htmlAttributes = new { @id = Model.ParticipantCallerMappingID + "_PhaseIIFollowUpVolunteerCallDateTime", @class = "callDateTime", Type = "date" } })
        </li>

        <li>
            <b>@Html.DisplayName("Remarks:")</b>
            @Html.EditorFor(modelItem => modelItem.PhaseIIFollowUpVolunteerCallRemark, new { htmlAttributes = new { @id = Model.ParticipantCallerMappingID + "_PhaseIIFollowUpVolunteerCallRemark", style = "width: 300px;" } })
        </li>

        <br />

        <li>
            <b>@Html.DisplayName("Committee Member:")</b>
            @Html.DisplayFor(modelItem => modelItem.PhaseIICommitteeMember)
        </li>

        <li>
            <b>@Html.DisplayName("Call Status:")</b>
            @Html.DropDownListFor(modelItem => modelItem.PhaseIICommitteeMemberCallStatus, phaseIIcommmembercallstatuslist, "--Select--", new { @id = Model.ParticipantCallerMappingID + "_PhaseIICommitteeMemberCallStatus", @class = "callStatus", style = "width: 300px;" })
        </li>

        <li>
            <b>@Html.DisplayName("Date:")</b>
            @Html.EditorFor(modelItem => modelItem.PhaseIICommitteeMemberCallDateTime, new { htmlAttributes = new { @id = Model.ParticipantCallerMappingID + "_PhaseIICommitteeMemberCallDateTime", @class = "callDateTime", Type = "date" } })
        </li>

        <li>
            <b>@Html.DisplayName("Remarks:")</b>
            @Html.EditorFor(modelItem => modelItem.PhaseIICommitteeMemberCallRemark, new { htmlAttributes = new { @id = Model.ParticipantCallerMappingID + "_PhaseIICommitteeMemberCallRemark", style = "width: 300px;" } })
        </li>
    </td>

    <td>

        <button class="btn btn-primary btn-save" type="button" id="saveparticipantcaller" value="@Model.ParticipantCallerMappingID">Save</button>

        @Html.ActionLink(
            "View",
            "ViewParticipantJourney",
            "ParticipantJourney",
            new { Area = "", Nric = Model.Participant.Nric, PHSEventId = 3 },
            htmlAttributes: new { target = "_blank" })
    </td>
</tr>

<script>
    $(document).ready(function () {
        $(".btn-save").unbind().click(function () {

            var participantCallerMappingId = $(this).attr("value");

            var phaseIFollowUpVolunteerCallRemark = document.getElementById(participantCallerMappingId + '_PhaseIFollowUpVolunteerCallRemark').value;
            var phaseIFollowUpVolunteerCallDateTime = document.getElementById(participantCallerMappingId + '_PhaseIFollowUpVolunteerCallDateTime').value;
            var phaseIFollowUpVolunteerCallStatus = document.getElementById(participantCallerMappingId + '_PhaseIFollowUpVolunteerCallStatus').value;

            var phaseIIFollowUpVolunteerCallRemark = document.getElementById(participantCallerMappingId + '_PhaseIIFollowUpVolunteerCallRemark').value;
            var phaseIIFollowUpVolunteerCallDateTime = document.getElementById(participantCallerMappingId + '_PhaseIIFollowUpVolunteerCallDateTime').value;
            var phaseIIFollowUpVolunteerCallStatus = document.getElementById(participantCallerMappingId + '_PhaseIIFollowUpVolunteerCallStatus').value;

            var phaseICommitteeMemberCallRemark = document.getElementById(participantCallerMappingId + '_PhaseICommitteeMemberCallRemark').value;
            var phaseICommitteeMemberCallDateTime = document.getElementById(participantCallerMappingId + '_PhaseICommitteeMemberCallDateTime').value;
            var phaseICommitteeMemberCallStatus = document.getElementById(participantCallerMappingId + '_PhaseICommitteeMemberCallStatus').value;

            var phaseIICommitteeMemberCallRemark = document.getElementById(participantCallerMappingId + '_PhaseIICommitteeMemberCallRemark').value;
            var phaseIICommitteeMemberCallDateTime = document.getElementById(participantCallerMappingId + '_PhaseIICommitteeMemberCallDateTime').value;
            var phaseIICommitteeMemberCallStatus = document.getElementById(participantCallerMappingId + '_PhaseIICommitteeMemberCallStatus').value;

            var jsonObject = {
                "participantCallerMappingId": participantCallerMappingId,
                "phaseIFollowUpVolunteerCallRemark": phaseIFollowUpVolunteerCallRemark,
                "phaseIFollowUpVolunteerCallDateTime": phaseIFollowUpVolunteerCallDateTime,
                "phaseIFollowUpVolunteerCallStatus": phaseIFollowUpVolunteerCallStatus,
                "phaseIIFollowUpVolunteerCallRemark": phaseIIFollowUpVolunteerCallRemark,
                "phaseIIFollowUpVolunteerCallDateTime": phaseIIFollowUpVolunteerCallDateTime,
                "phaseIIFollowUpVolunteerCallStatus": phaseIIFollowUpVolunteerCallStatus,
                "phaseICommitteeMemberCallRemark": phaseICommitteeMemberCallRemark,
                "phaseICommitteeMemberCallDateTime": phaseICommitteeMemberCallDateTime,
                "phaseICommitteeMemberCallStatus": phaseICommitteeMemberCallStatus,
                "phaseIICommitteeMemberCallRemark": phaseIICommitteeMemberCallRemark,
                "phaseIICommitteeMemberCallDateTime": phaseIICommitteeMemberCallDateTime,
                "phaseIICommitteeMemberCallStatus": phaseIICommitteeMemberCallStatus
            };

            $.ajax({
                url: "@Url.Action("SaveParticipantCallerMapping", "FollowUp")",
                type: "POST",
                data: JSON.stringify(jsonObject),
                cache: false,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                error: function (response) {
                    alert(response.Error);
                },
                success: function (response) {
                    alert("Save successfully");
                }
            });

        });
    });
</script>