@model PHS.DB.Person

@{
    ViewBag.Title = "Login";
}

@Html.Partial("_MessageBoxPartial")

<h2 class="text-center" style="margin-top:10%">Please Login</h2>

@using (Html.BeginForm())
{
    //@Html.AntiForgeryToken()

    <div class="form-horizontal ">
        <hr />
               
        @* @Html.ValidationSummary(true, "", new { @class = "text-danger" }) *@

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />

        <div class="form-group col-lg-offset-10">
            <div class="text-center">
                <button type="submit" value="Login" class="btn btn-primary btn-lg has-spinner" style="width:400px" id="BtnLogin">
                    <span class="spinner"><i class="icon-spin icon-refresh"></i></span>
                    Login
                </button>
            </div>
        </div>
    </div>
}
<script type="text/javascript" defer="defer">
    $("button").click(function () {
        var $btn = $(this);
        $btn.button('loading');
        // simulating a timeout
        setTimeout(function () {
            $btn.button('reset');
        }, 100000);
    });

</script>
<style type="text/css">
    .spinner {
        display: inline-block;
        opacity: 0;
        width: 0;
        -webkit-transition: opacity 0.25s, width 0.25s;
        -moz-transition: opacity 0.25s, width 0.25s;
        -o-transition: opacity 0.25s, width 0.25s;
        transition: opacity 0.25s, width 0.25s;
    }

    .has-spinner.active {
        cursor: progress;
    }

        .has-spinner.active .spinner {
            opacity: 1;
            width: auto; /* This doesn't work, just fix for unkown width elements */
        }

    .has-spinner.btn-mini.active .spinner {
        width: 10px;
    }

    .has-spinner.btn-small.active .spinner {
        width: 13px;
    }

    .has-spinner.btn.active .spinner {
        width: 16px;
    }

    .has-spinner.btn-large.active .spinner {
        width: 19px;
    }
</style>

