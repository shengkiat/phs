@model PHS.Business.ViewModel.Event.ModalityEventViewModel

@{
    ViewBag.Title = "CreateModality";
}

<h2>Create Modality</h2>

@using (Html.BeginForm("Create", "Modality", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
        <div hidden="hidden">
            @Html.HiddenFor(x => x.IsMandatory)
            @Html.HiddenFor(x => x.EventID)
            @Html.HiddenFor(x => x.Status)
        </div>

        <div class="form-horizontal">
            <hr />

            <div style="color: red">@ViewBag.error</div>
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsMandatory, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (Model.IsMandatory == true)
                {
                        <span class="glyphicon glyphicon-ok-sign" style="color:green"></span>
                    }
                    else
                    {
                        <span class="glyphicon glyphicon-minus-sign" style="color:grey"></span>
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ImageUpload, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.ImageUpload, new { type = "file" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ModalityRole, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @for (var i = 0; i < Model.ModalityRole.Count; i++)
                    {
                        <table>
                            <tr>
                                <td>
                                    @Html.HiddenFor(it => it.ModalityRole[i].Name)
                                    @Html.DisplayFor(it => it.ModalityRole[i].Name)
                                </td>
                                <td>
                                    @Html.CheckBoxFor(it => it.ModalityRole[i].Checked, new { Style = "vertical-            align:3px}" })
                                </td>
                            </tr>
                        </table>

                    }
                </div>

            </div>

            <h4>Forms</h4>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-primary">Create</button>
                    @Html.ActionLink("Back", "Edit", "Event", new { id = Model.EventID }, new { @class = "btn btn-common cancel" })
                </div>
            </div>
        </div>
        }
