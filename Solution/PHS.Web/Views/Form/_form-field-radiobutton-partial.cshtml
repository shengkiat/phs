@model PHS.DB.ViewModels.Form.TemplateFieldViewModel
@using PHS.Business.Extensions
@using PHS.Common

<script type="text/javascript">

    $(document).ready(function () {
        var fieldName = jq("SubmitFields[" + @Model.DomId + "].RadioButton");
        $('input[type=radio][name=' + fieldName + ']').on("change", function () {

            var radios = document.getElementsByName('SubmitFields[@Model.DomId].RadioButton');
            for (var i = 0, length = radios.length; i < length; i++) {
                if (radios[i].checked) {
                    // do whatever you want with the checked radio
                    var selectedValue = radios[i].value;

                    displayOrHide(this, selectedValue, @Model.TemplateFieldID);

                    // only one radio can be logically checked, don't check the rest
                    break;
                }
            }


        });
        var value = $("input[type=radio][name=" + fieldName + "]").val();
        displayStandardReferenceResult(value, @Model.DomId);
    });

    
</script>

@{
    var displayAttribute = (Model.IsEditMode() || Html.IsDisplayField(Model)) ? "" : "style=display:none;";
}

<div id="mainfield-RadioButton-@Model.DomId"
     data-reference="@Model.ConditionTemplateFieldID"
     data-criteria="@Model.ConditionCriteria" data-options="@Model.ConditionOptions"
     data-id="@Model.TemplateFieldID"
     @displayAttribute>

    <div style="width: 90%; word-wrap: break-word; text-align: left;"
         data-sub-channel="sub-label-@Model.DomId"
         class="label editablewysiwyg">@Html.Raw(@Model.Label)</div>

        <span class="required @Model.IsRequired.OutputIfTrue("visible","hidden")">*</span>

        <div class="input" style="width: 70%; margin-left: 1cm;">
            <ul class="option-list vertical-list">
                @{
                    var checkedAttribute = "";
                    var readonlyAttribute = Model.IsReadOnlyMode() ? "readonly" : "";
                    var disabledAttribute = Model.IsReadOnlyMode() ? "disabled=\"disabled\"" : "";

                    bool checkDefault = !Model.Options.Split(Constants.Form_Option_Split).Any(o => Html.IsTempFormValueSelected(Model, o));
                    bool checkFirst = !string.IsNullOrEmpty(Model.SelectedOption) || Model.Options.Split(Constants.Form_Option_Split).Any(o => Html.IsTempFormValueSelected(Model, o));
                    int counter = 0;
                }

                @foreach (var option in Model.Options.Split(Constants.Form_Option_Split))
                {
                    <li>
                        @if (Html.IsSubmittedValueSelected(Model, option))
                        {
                            checkedAttribute = "checked=\"checked\"";
                        }
                        else
                        {
                            checkedAttribute = "";
                        }

                        @if (checkDefault && Model.SelectedOption.IsTheSameAs(option))
                        {
                            checkedAttribute = "checked=\"checked\"";
                        }

                        @if (Html.GetTempFormValue(Model, "RadioButton").IsTheSameAs(option))
                        {
                            checkedAttribute = "checked=\"checked\"";
                        }

                        @if (checkFirst && counter == 0)
                        {
                            checkedAttribute = "checked=\"checked\"";
                        }

                        @{counter = counter + 1;}

                        <input name="SubmitFields[@Model.DomId].RadioButton" type="radio" @checkedAttribute @disabledAttribute
                               value="@option" name="radiogroup-@Model.DomId" />
                        <label style="display: block; margin-left: 20px; margin-top: -18px; word-wrap: break-word">@option</label>
                    </li>
                            }

            </ul>
            <ul class="othersoption-list vertical-list">
                @if (Model.AddOthersOption)
            {
                    <li>
                        @if (Html.IsSubmittedValueSelected(Model, "OthersOption"))
                        {
                            checkedAttribute = "checked=\"checked\"";
                        }
                        else
                        {
                            checkedAttribute = "";
                        }

                        @if (!string.IsNullOrEmpty(Html.GetTempFormValue(Model, "OthersOption")))
                        {
                            checkedAttribute = "checked=\"checked\"";
                        }
                        <input name="SubmitFields[@Model.DomId].RadioButton" id="SubmitFields[@Model.DomId].RadioOthersOption" @disabledAttribute type="radio" @checkedAttribute value="OthersOption" name="radiogroup-@Model.DomId" />
                        <input name="SubmitFields[@Model.DomId].OthersOption" id="SubmitFields[@Model.DomId].OthersOption" @readonlyAttribute type="text" value="@Html.GetSubmittedTextValue(Model, "OthersOption")" placeholder="@Model.OthersPlaceHolder" />
                    </li>
                }
                else
                {
                    <li>
                        <input name="SubmitFields[@Model.DomId].RadioButton" id="SubmitFields[@Model.DomId].RadioOthersOption" @disabledAttribute type="radio" value="OthersOption" name="radiogroup-@Model.DomId" style="display:none" />
                        <input name="SubmitFields[@Model.DomId].OthersOption" id="SubmitFields[@Model.DomId].OthersOption" @readonlyAttribute type="text" value="@Model.OthersOption" style="display:none" placeholder="@Model.OthersPlaceHolder" />
                    </li>
                }
            </ul>
            <label id="SubmitFields[@Model.DomId].StandardReferenceResult"></label>

            <input id="SubmitFields[@Model.DomId].StandardReferenceId"
                   name="SubmitFields[@Model.DomId].StandardReferenceId"
                   type="hidden"
                   value="@Model.StandardReferenceID"
                   style="width: 100px; height:20px;" maxlength="9" />

            @if (Model.IsEditMode())
            {
                @Html.Partial("_FormFieldPropertiesPartial", Model)
            }

            @if (!Model.Errors.IsNullOrEmpty())
            {
                <span class="field-validation-error">@Model.Errors</span>
            }
        </div>
        <a href="javascript:void(0);" title="@Model.HelpText" class="help-icon-1 help-icon @Model.HelpText.OutputIfIs("", "hide") w-tip">
            <img src="@Html.SpacerImage()" alt="help" />
        </a>

        @if (Model.IsEditMode())
        {
            @Html.Partial("_FormFieldSettingsPartial")
        }
</div>