@model PHS.DB.ViewModels.Form.TemplateFieldViewModel
@using PHS.Business.Extensions

<script type="text/javascript">

    $(document).ready(function () {

        $('input[type=checkbox][name=SubmitFields[@Model.DomId].Checkbox]').on("change", function () {

            var allVals = [];
            $('input[type=checkbox][name=SubmitFields[@Model.DomId].Checkbox]:checked').each(function () {
                allVals.push($(this).val());
            });

            displayOrHideFromCheckBox(this, allVals, @Model.DomId);


        });
    });

</script>

@{
    var displayAttribute = (Model.IsEditMode() || Html.IsDisplayField(Model)) ? "" : "style=display:none;";
}

<div id="mainfield-Checkbox-@Model.DomId"
     data-reference="@Model.ConditionTemplateFieldID"
     data-criteria="@Model.ConditionCriteria" data-options="@Model.ConditionOptions"
     @displayAttribute>

    <label style="width: 90%; word-wrap: break-word; text-align: left;"
           data-sub-channel="sub-label-@Model.DomId"
           class="label editablewysiwyg">@Model.Label</label>

        <span class="required @Model.IsRequired.OutputIfTrue("visible","hidden")">*</span>

        <div class="input" style="width: 90%; margin-left: 1cm;">
            <ul class="option-list vertical-list">
                @{
                    var checkedAttribute = "";
                    var readonlyAttribute = Model.IsReadOnlyMode() ? "readonly" : "";
                    var disabledAttribute = Model.IsReadOnlyMode() ? "disabled=\"disabled\"" : "";
                }

                @foreach (var option in Model.Options.Split(","))
            {
                    <li>
                        @if (Html.IsSubmittedValueSelected(Model, option))
                        {
                            checkedAttribute = "checked=\"checked\"";
                        }
                        else
                        {
                            checkedAttribute = "";
                        }

                        @if (Html.GetTempFormValue(Model, "Checkbox").IsTheSameAs(option))
                        {
                            checkedAttribute = "checked=\"checked\"";
                        }

                        <input id="SubmitFields[@Model.DomId].Checkbox"
                               name="SubmitFields[@Model.DomId].Checkbox"
                               @disabledAttribute @checkedAttribute type="checkbox" value="@option" />
                        <label style="display: block; margin-left: 20px; margin-top: -18px; word-wrap: break-word">@option</label>
                    </li>
                }
            </ul>
            <ul class="othersoption-list vertical-list">
                @if (Model.AddOthersOption)
            {
                    <li>
                        @if (Html.IsSubmittedValueSelected(Model, "OthersOption"))
                        {
                            checkedAttribute = "checked=\"checked\"";
                        }
                        else
                        {
                            checkedAttribute = "";
                        }

                        @if (!string.IsNullOrEmpty(Html.GetTempFormValue(Model, "OthersOption")))
                        {
                            checkedAttribute = "checked=\"checked\"";
                        }
                        else
                        {
                            checkedAttribute = "";
                        }
                        <input name="SubmitFields[@Model.DomId].Checkbox" id="SubmitFields[@Model.DomId].CheckboxOthersOption" @disabledAttribute @checkedAttribute type="checkbox" name="checkbox-@Model.DomId" value="OthersOption" />
                        <input name="SubmitFields[@Model.DomId].OthersOption" id="SubmitFields[@Model.DomId].OthersOption" @readonlyAttribute type="text" placeholder="Others" value="@Html.GetTempFormValue(Model, "OthersOption")" />
                    </li>
                }
                else
                {
                    <li>
                        <input name="SubmitFields[@Model.DomId].Checkbox" id="SubmitFields[@Model.DomId].CheckboxOthersOption" @disabledAttribute type="checkbox" name="checkbox-@Model.DomId" style="display:none" value="OthersOption" />
                        <input name="SubmitFields[@Model.DomId].OthersOption" id="SubmitFields[@Model.DomId].OthersOption" @readonlyAttribute type="text" style="display:none" placeholder="Others" />
                    </li>
                }
            </ul>
            @if (Model.IsEditMode())
            {
                @Html.Partial("_form-field-properties-partial", Model)
            }

            @if (!Model.Errors.IsNullOrEmpty())
            {
                <span class="field-validation-error">@Model.Errors</span>
            }
        </div>
        <a href="javascript:void(0);" title="@Model.HelpText" class="help-icon-1 help-icon @Model.HelpText.OutputIfIs("", "hide") w-tip">
            <img src="@Html.SpacerImage()" alt="help" />
        </a>

        @if (Model.IsEditMode())
        {
            @Html.Partial("_form-field-settings-template")
        }
</div>

