@model PHS.Business.ViewModel.FormExport.CriteriaFieldViewModel

@using PHS.Common
@using PHS.Business.Extensions
@using PHS.DB.ViewModels.Form

@using (Html.BeginCollectionItem("CriteriaFields"))
{
    <script type="text/javascript">

        $(document).on('focus', '.datepicker', function () {
            $(this).datetimepicker({
                format: 'yyyy-mm-dd hh:ii'
            })
        });
    </script>

    <div id="trCriteriaRow0" class="trCriteriaRow0">

        @{
            <div style="float:left;">
                @Html.DropDownListFor(m => m.TemplateFieldID, Model.FieldLabels, String.Empty, new {@id ="criteriaField", @onchange = "myFunction(this)" })
            </div>

            var criteriaLogFields = new List<SelectListItem>()
                        {
                            new SelectListItem {Text = "eq", Value = "eq"},
                            new SelectListItem {Text = "neq", Value = "neq"},
                            new SelectListItem {Text = "gt", Value = "gt"},
                            new SelectListItem {Text = "gte", Value = "gte"},
                            new SelectListItem {Text = "lt", Value = "lt"},
                            new SelectListItem {Text = "lte", Value = "lte"},
                            new SelectListItem {Text = "startswith", Value = "startswith"},
                            new SelectListItem {Text = "endswith", Value = "endswith"},
                            new SelectListItem {Text = "contains", Value = "contains"},
                            new SelectListItem {Text = "doesnotcontain", Value = "doesnotcontain"},
                            new SelectListItem {Text = "in", Value = "in"}
                        };

            <div style="float:left;">
                @Html.DropDownListFor(m => m.CriteriaLogic, criteriaLogFields, String.Empty)
            </div>


            <div id="tdCriteriaFields" style="float:left;">
                @if (Model.GroupedEntries.Count() > 0)
                {
                    foreach (var field in Model.GroupedEntries.First())
                    {
                        if (field.FieldType == Constants.TemplateFieldType.CHECKBOX
                            || field.FieldType == Constants.TemplateFieldType.RADIOBUTTON
                            || field.FieldType == Constants.TemplateFieldType.DROPDOWNLIST)
                        {

                            var optionFields = new List<SelectListItem>();

                            foreach (var formField in Model.Fields)
                            {
                                if (formField.TemplateFieldID.Equals(field.TemplateFieldID))
                                {
                                    foreach (var option in formField.Options.Split(","))
                                    {
                                        optionFields.Add(new SelectListItem { Text = @option, Value = @option });
                                    }

                                    if (formField.AddOthersOption)
                                    {
                                        optionFields.Add(new SelectListItem { Text = "Others", Value = "Others" });
                                    }
                                }
                            }

                        @Html.DropDownListFor(m => m.CriteriaValue[@field.TemplateFieldID.ToString()], optionFields, String.Empty, new { @id = "criteria[" + @field.TemplateFieldID + "]", @style = "display:none;" })

                        }

                        else
                        {
                        @Html.TextBoxFor(m => m.CriteriaValue[@field.TemplateFieldID.ToString()], new { @id = "criteria[" + @field.TemplateFieldID + "]", @style = "display:none;" })
                        }
                    }
                }

                @Html.EditorFor(m => m.CriteriaValue["Submitted On"], new { htmlAttributes = new { @id = "criteria[Submitted On]", @style = "display:none;", @class = "form-control datepicker" }})
            </div>
        }

        <div style="float:left;">
            <a id="addCriteriaConditionButton" name="addCriteriaConditionButton" class="hyperlink-button light-blue-button">+</a>
            <a id="removeCriteriaButton" name="removeCriteriaButton" class="hyperlink-button light-blue-button">-</a>
        </div>

        <table id="criteriaSubTable">
            @foreach (var criteriaSubField in @Model.CriteriaSubFields)
            {
                Html.RenderPartial("_ViewEntriesCriteriaSubPartial", criteriaSubField);
            }
        </table>
   </div>
}
