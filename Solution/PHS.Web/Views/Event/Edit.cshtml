@model PHS.DB.PHSEvent

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script language="javascript" type="text/javascript">

    function addRow() {

        @{
            PHS.DB.Modality m = new PHS.DB.Modality();
            m.Name = "";
            Model.Modalities.Add(m);
        }

        var index = $("#tbBooks").children("tr").length;

        var indexCell = "<td style='display:none'><input name='Books.Index' type='hidden' value='" + index + "' /></td>";
        var titleCell = "<td><input style='width: 100%; max-width:1000px;' id='Books_" + index + "__Title' name='Modalities[" + index + "].Name' type='text' value='' /></td>";
        var removeCell = "<td style='width:200px;'><input id='btnAddBook' type='button'  value='Remove' onclick='removeRow(" + index + ");' /></td>";

        var moveUpCell = "<td style='width:50px;'><input type='button' value='&#8679;' onClick='MoveUp.call(this);'/></td>";
        var moveDownCell = "<td style='width:50px;'><input type='button' value='&#8681;' onClick='MoveDown.call(this);'/></td>";


        var newRow = "<tr id='trBook" + index + "'>" +
        indexCell + titleCell + removeCell + moveUpCell + moveDownCell + "</tr>";
        $("#tbBooks").append(newRow);
    }

    function addExistingRow(name) {


        var index = $("#tbBooks").children("tr").length;

        var indexCell = "<td style='display:none'><input name='Books.Index' type='hidden' value='" + index + "' /></td>";
        var titleCell = "<td><input style='width: 100%; max-width:1000px;' id='Books_" + index + "__Title' name='Modalities[" + index + "].Name' type='text' value='" + name + "' /></td>";
        var removeCell = "<td style='width:200px;'><input id='btnAddBook' type='button'  value='Remove' onclick='removeRow(" + index + ");' /></td>";

        var moveUpCell = "<td style='width:50px;'><input type='button' value='&#8679;' onClick='MoveUp.call(this);'/></td>";
        var moveDownCell = "<td style='width:50px;'><input type='button' value='&#8681;' onClick='MoveDown.call(this);'/></td>";


        var newRow = "<tr id='trBook" + index + "'>" +
        indexCell + titleCell + removeCell + moveUpCell + moveDownCell + "</tr>";
        $("#tbBooks").append(newRow);
    }

    function removeRow(id) {
        var controlToBeRemoved = "#trBook" + id;
        $(controlToBeRemoved).remove();
    }

    function get_previoussibling(n) {
        x = n.previousSibling;
        while (x.nodeType != 1) {
            x = x.previousSibling;
        }
        return x;
    }

    function get_nextsibling(n) {
        x = n.nextSibling;
        while (x != null && x.nodeType != 1) {
            x = x.nextSibling;
        }
        return x;
    }

    function MoveUp() {
        var table,
            row = this.parentNode;

        while (row != null) {
            if (row.nodeName == 'TR') {
                break;
            }
            row = row.parentNode;
        }
        table = row.parentNode;
        table.insertBefore(row, get_previoussibling(row));
    }

    function MoveDown() {
        var table,
            row = this.parentNode;

        while (row != null) {
            if (row.nodeName == 'TR') {
                break;
            }
            row = row.parentNode;
        }
        table = row.parentNode;
        table.insertBefore(row, get_nextsibling(get_nextsibling(row)));
    }
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Events</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PHSEventID)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Venue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Venue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Venue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDT, new { htmlAttributes = new { @class = "form-control", Type = "date" } })
                @Html.ValidationMessageFor(model => model.StartDT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDT, new { htmlAttributes = new { @class = "form-control", Type = "date" } })
                @Html.ValidationMessageFor(model => model.EndDT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div>
            <input id="btnAddBook" type="button"
                   onclick="addRow();" value="Add Modality" />
        </div>

        <table>
            <thead>
                <tr>
                    <td>
                        Modality Name
                    </td>
                </tr>

             

            </thead>
            <tbody id="tbBooks"></tbody>
        </table>


        @foreach (var item in Model.Modalities)
        {
            if (item.Name.Equals(""))
            {
                continue;
            }
            <script type="text/javascript">

                var data = "@item.Name";

                var index = $("#tbBooks").children("tr").length;

                var indexCell = "<td style='display:none'><input name='Books.Index' type='hidden' value='" + index + "' /></td>";
                var titleCell = "<td><input style='width: 100%; max-width:1000px;' id='Books_" + index + "__Title' name='Modalities[" + index + "].Name' type='text' value='" + data + "' /></td>";
                var removeCell = "<td style='width:200px;'><input  id='btnAddBook' type='button'  value='Remove' onclick='removeRow(" + index + ");' /></td>";

                var moveUpCell = "<td style='width:50px;'><input type='button' value='&#8679;' onClick='MoveUp.call(this);'/></td>";
                var moveDownCell = "<td style='width:50px;'><input type='button' value='&#8681;' onClick='MoveDown.call(this);'/></td>";


                var newRow = "<tr id='trBook" + index + "'>" +
                indexCell + titleCell + removeCell + moveUpCell + moveDownCell + "</tr>";
                $("#tbBooks").append(newRow);
            </script>
            
        }


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
















